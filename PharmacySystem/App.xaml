<Application x:Class="PharmacySystem.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PharmacySystem"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:viewModel="clr-namespace:PharmacySystem.ViewModel"
             xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
             xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
             xmlns:class="clr-namespace:PharmacySystem.Class"
             xmlns:converters="clr-namespace:PharmacySystem.Converters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             StartupUri="InitialSettingWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="LightBlue" SecondaryColor="Cyan"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Thumb.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <viewModel:ViewModelLocator x:Key="Locator"/>
            <converters:TaiwanCalendarConverter x:Key="TaiwanCalendarConverter"/>
            <BitmapImage x:Key="DefaultIcon" UriSource="Images/EmptyIcon.png" />
            <SolidColorBrush x:Key="BaseBackground" Color="#ECECEC" />
            <SolidColorBrush x:Key="FeatureButtonBrush" Color="#0062B8"/>
            <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF" />
            <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC" />
            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
            <SolidColorBrush x:Key="TextForeground" Color="#212121" />
            <Color x:Key="CloseCommandHighlightColor">#e04343</Color>
            <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F0F0F0" Offset="0.0" />
                <GradientStop Color="#E5E5E5" Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="TabItem.Static.Border" Color="#FF858585" />
            <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#ECF4FC" Offset="0.0" />
                <GradientStop Color="#DCECFC" Offset="1.0" />
            </LinearGradientBrush>
            <system:Double x:Key="NormalContentSize">18</system:Double>
            <Style TargetType="{x:Type Thumb}" x:Key="InvisibleThumbStyle">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid Background="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="MenuCommandButtonStyle">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Opacity" Value=".8" />
                <Setter Property="Width" Value="24" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border"
                                            Value="{StaticResource Button.Disabled.Background}" />
                                    <Setter Property="BorderBrush" TargetName="border"
                                            Value="{StaticResource Button.Disabled.Border}" />
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter"
                                            Value="{StaticResource Button.Disabled.Foreground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" Value="{x:Static dragablz:DragablzColors.WindowGlassBrush}" />
                        <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Opacity" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="CloseItemCommandButtonStyle"
                   BasedOn="{StaticResource MenuCommandButtonStyle}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Ellipse Width="{TemplateBinding Width}"
                                         Height="{TemplateBinding Height}"
                                         Fill="{TemplateBinding Background}" />
                                <Path x:Name="Path" Data="M0.5,71 L70,0.5 M0.5,1 L70,70.5" StrokeThickness="1.5" Width="6" Height="6" 
                                      Stretch="Uniform" Stroke="{TemplateBinding Foreground}" SnapsToDevicePixels="True"
                                      StrokeStartLineCap="Square" StrokeEndLineCap="Square"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{x:Static SystemColors.ActiveBorderColor}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="12" />
                <Setter Property="Height" Value="12" />
                <Setter Property="Margin" Value="4 0 2 0" />
                <Setter Property="Foreground" Value="{x:Static SystemColors.HighlightTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="{StaticResource CloseCommandHighlightColor}" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Opacity" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="NonFocusableDataGridCell" TargetType="{x:Type DataGridCell}">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Height" Value="35" />
                <Setter Property="Margin" Value="10,0,0,0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MaterialDesignDataGrid}">
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="SelectionUnit" Value="FullRow"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="CanUserReorderColumns" Value="False"/>
                <Setter Property="CanUserResizeColumns" Value="False"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="CanUserResizeRows" Value="False"/>
                <Setter Property="CanUserSortColumns" Value="False"/>
                <Setter Property="materialDesign:ScrollViewerAssist.IsAutoHideEnabled" Value="True"/>
            </Style>
            <ControlTemplate TargetType="{x:Type DatePicker}" x:Key="TaiwanDatePickerTemplate">
                <Grid x:Name="PART_Root">
                    <DatePickerTextBox x:Name="PART_TextBox" BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="0" materialDesign:TextFieldAssist.DecorationVisibility="{TemplateBinding materialDesign:TextFieldAssist.DecorationVisibility}" materialDesign:HintAssist.FloatingScale="{TemplateBinding materialDesign:HintAssist.FloatingScale}" materialDesign:HintAssist.Foreground="{TemplateBinding materialDesign:HintAssist.Foreground}" materialDesign:HintAssist.FloatingOffset="{TemplateBinding materialDesign:HintAssist.FloatingOffset}" Focusable="{TemplateBinding Focusable}" 
                                                           materialDesign:TextFieldAssist.HasOutlinedTextField="{TemplateBinding materialDesign:TextFieldAssist.HasOutlinedTextField}" materialDesign:TextFieldAssist.HasFilledTextField="{TemplateBinding materialDesign:TextFieldAssist.HasFilledTextField}" materialDesign:HintAssist.Hint="{TemplateBinding materialDesign:HintAssist.Hint}" materialDesign:HintAssist.HelperTextFontSize="{TemplateBinding materialDesign:HintAssist.HelperTextFontSize}" materialDesign:HintAssist.HintOpacity="{TemplateBinding materialDesign:HintAssist.HintOpacity}" 
                                                           materialDesign:HintAssist.HelperText="{TemplateBinding materialDesign:HintAssist.HelperText}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" materialDesign:TextFieldAssist.HasClearButton="{TemplateBinding materialDesign:TextFieldAssist.HasClearButton}" materialDesign:HintAssist.IsFloating="{TemplateBinding materialDesign:HintAssist.IsFloating}" 
                                                           materialDesign:TextFieldAssist.NewSpecHighlightingEnabled="{TemplateBinding materialDesign:TextFieldAssist.NewSpecHighlightingEnabled}" materialDesign:TextFieldAssist.PrefixText="{TemplateBinding materialDesign:TextFieldAssist.PrefixText}" Grid.Row="0" 
                                                           materialDesign:TextFieldAssist.RippleOnFocusEnabled="{TemplateBinding materialDesign:TextFieldAssist.RippleOnFocusEnabled}" 
                                                           materialDesign:TextFieldAssist.SuffixText="{TemplateBinding materialDesign:TextFieldAssist.SuffixText}" materialDesign:TextFieldAssist.TextFieldCornerRadius="{TemplateBinding materialDesign:TextFieldAssist.TextFieldCornerRadius}" materialDesign:TextFieldAssist.TextBoxViewMargin="{TemplateBinding materialDesign:TextFieldAssist.TextBoxViewMargin}" materialDesign:TextFieldAssist.UnderlineBrush="{TemplateBinding materialDesign:TextFieldAssist.UnderlineBrush}" materialDesign:TextFieldAssist.UnderlineCornerRadius="{TemplateBinding materialDesign:TextFieldAssist.UnderlineCornerRadius}" VerticalContentAlignment="Center">
                        <DatePickerTextBox.Padding>
                            <MultiBinding UpdateSourceTrigger="Default">
                                <MultiBinding.Converter>
                                    <materialDesign:PickerInnerPaddingConverter/>
                                </MultiBinding.Converter>
                                <Binding Path="Padding" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding ElementName="PART_Button" Mode="OneWay" Path="ActualWidth"/>
                            </MultiBinding>
                        </DatePickerTextBox.Padding>
                        <DatePickerTextBox.Style>
                            <Style TargetType="{x:Type DatePickerTextBox}" BasedOn="{StaticResource MaterialDesignDatePickerTextBox}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <TextBox x:Name="PART_TextBox" Text="{class:CultureAwareBinding Path=SelectedDate, StringFormat='yyy/MM/dd', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}},Converter={StaticResource TaiwanCalendarConverter}}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DatePickerTextBox.Style>
                    </DatePickerTextBox>
                    <Button x:Name="PART_Button" Foreground="{TemplateBinding BorderBrush}" Focusable="False" HorizontalAlignment="Right" Height="16" VerticalAlignment="Center">
                        <Button.Margin>
                            <TemplateBinding Property="Padding">
                                <TemplateBinding.Converter>
                                    <materialDesign:PickerInnerPaddingConverter/>
                                </TemplateBinding.Converter>
                            </TemplateBinding>
                        </Button.Margin>
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <materialDesign:PackIcon Background="Transparent" Foreground="{TemplateBinding Foreground}" Kind="Calendar" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" PopupAnimation="Fade" Placement="Bottom" StaysOpen="False"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="materialDesign:TextFieldAssist.HasFilledTextField" Value="True">
                        <Setter Property="Padding" Value="16,8"/>
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxBackground}"/>
                        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="0"/>
                    </Trigger>
                    <Trigger Property="materialDesign:TextFieldAssist.HasOutlinedTextField" Value="True">
                        <Setter Property="Padding" Value="16"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextAreaBorder}"/>
                        <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="0"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="materialDesign:TextFieldAssist.HasFilledTextField" Value="False"/>
                            <Condition Property="materialDesign:TextFieldAssist.HasOutlinedTextField" Value="False"/>
                            <Condition Property="IsMouseOver" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEnabled" Value="True"/>
                            <Condition Property="IsMouseOver" SourceName="PART_Button" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground" TargetName="PART_Button" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" TargetName="PART_Button" Value="0.56"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEnabled" Value="False"/>
                            <Condition Property="materialDesign:TextFieldAssist.HasOutlinedTextField" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" TargetName="PART_TextBox" Value="{DynamicResource MaterialDesignTextAreaInactiveBorder}"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsKeyboardFocused" SourceName="PART_TextBox" Value="True"/>
                            <Condition Property="materialDesign:TextFieldAssist.HasOutlinedTextField" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" TargetName="PART_TextBox" Value="{Binding (materialDesign:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource Self}}"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                            <Condition Property="materialDesign:TextFieldAssist.HasFilledTextField" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <DataTemplate x:Key="MedicalValueItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Id}"/>
                    <TextBlock Text="{Binding Name}" Margin="5,0,0,0"/>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
